'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lodashGet = require('lodash.get');

var _lodashGet2 = _interopRequireDefault(_lodashGet);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

var _superagentPromise = require('superagent-promise');

var _superagentPromise2 = _interopRequireDefault(_superagentPromise);

var _urlJoin = require('url-join');

var _urlJoin2 = _interopRequireDefault(_urlJoin);

var _repo = require('./repo');

var _repo2 = _interopRequireDefault(_repo);

var _snippet = require('./snippet');

var _snippet2 = _interopRequireDefault(_snippet);

var _team = require('./team');

var _team2 = _interopRequireDefault(_team);

var _user = require('./user');

var _user2 = _interopRequireDefault(_user);

var log = (0, _debug2['default'])('bitbucketjs:bitbucket');

module.exports = function () {
  var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  opts.Promise = opts.Promise || Promise;
  opts.apiRoot = opts.apiRoot || 'https://api.bitbucket.org/';
  opts.apiRoot = (0, _urlJoin2['default'])(opts.apiRoot, '/');

  var oldEnd = _superagent2['default'].Request.prototype.end;
  _superagent2['default'].Request.prototype.end = function (cb) {
    log('requesting', this.method, ':', this.url);

    if (opts.username && opts.password) {
      this.auth(opts.username, opts.password);
      this._authenticated = true;
    }

    return oldEnd.call(this, function (err, res) {
      // if the response has a parsed body payload, return that instead
      if (res && res.body) {
        res = res.body;
      };

      // if the error has a parsed error message in the body, return that instead
      var bodyMessage = (0, _lodashGet2['default'])(err, 'response.body.error.message');
      if (bodyMessage) {
        err.message = bodyMessage;
      }

      cb.call(this, err, res);
    });
  };

  var agent = (0, _superagentPromise2['default'])(_superagent2['default'], opts.Promise);
  if (opts.username && opts.password) {
    agent._bb_authenticated = true;
  }

  agent._Promise = opts.Promise;

  opts.request = agent;

  return {
    request: agent,
    repo: (0, _repo2['default'])(opts),
    user: (0, _user2['default'])(opts),
    snippet: (0, _snippet2['default'])(opts),
    team: (0, _team2['default'])(opts)
  };
};